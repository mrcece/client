//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AssetsManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AssetsManager), typeof(System.Object));
		L.RegFunction("Init", Init);
		L.RegFunction("NormalUpdate", NormalUpdate);
		L.RegFunction("RepaireUpdate", RepaireUpdate);
		L.RegFunction("StartRemainUpdate", StartRemainUpdate);
		L.RegFunction("Update", Update);
		L.RegFunction("New", _CreateAssetsManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Ins", get_Ins, null);
		L.RegVar("Ready", get_Ready, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateAssetsManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				AssetsManager obj = new AssetsManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: AssetsManager.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AssetsManager obj = (AssetsManager)ToLua.CheckObject<AssetsManager>(L, 1);
			AssetsManager.Config arg0 = (AssetsManager.Config)ToLua.CheckObject<AssetsManager.Config>(L, 2);
			obj.Init(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NormalUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AssetsManager obj = (AssetsManager)ToLua.CheckObject<AssetsManager>(L, 1);
			System.Collections.IEnumerator o = obj.NormalUpdate();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RepaireUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AssetsManager obj = (AssetsManager)ToLua.CheckObject<AssetsManager>(L, 1);
			System.Collections.IEnumerator o = obj.RepaireUpdate();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartRemainUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AssetsManager obj = (AssetsManager)ToLua.CheckObject<AssetsManager>(L, 1);
			System.Collections.IEnumerator o = obj.StartRemainUpdate();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AssetsManager obj = (AssetsManager)ToLua.CheckObject<AssetsManager>(L, 1);
			obj.Update();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Ins(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, AssetsManager.Ins);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Ready(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssetsManager obj = (AssetsManager)o;
			bool ret = obj.Ready;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Ready on a nil value");
		}
	}
}

