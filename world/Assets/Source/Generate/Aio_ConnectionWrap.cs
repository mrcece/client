//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Aio_ConnectionWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Aio.Connection), typeof(System.Object));
		L.RegFunction("NewConnection", NewConnection);
		L.RegFunction("Connect", Connect);
		L.RegFunction("Close", Close);
		L.RegFunction("Read", Read);
		L.RegFunction("Write", Write);
		L.RegFunction("BeginWrite", BeginWrite);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NewConnection(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Aio.Connection.Builder arg0 = (Aio.Connection.Builder)ToLua.CheckObject(L, 1, typeof(Aio.Connection.Builder));
			Aio.Connection o = Aio.Connection.NewConnection(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Connect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Aio.Connection obj = (Aio.Connection)ToLua.CheckObject(L, 1, typeof(Aio.Connection));
			obj.Connect();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Close(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Aio.Connection obj = (Aio.Connection)ToLua.CheckObject(L, 1, typeof(Aio.Connection));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.Close(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Read(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Aio.Connection obj = (Aio.Connection)ToLua.CheckObject(L, 1, typeof(Aio.Connection));
			obj.Read();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Write(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Aio.Connection obj = (Aio.Connection)ToLua.CheckObject(L, 1, typeof(Aio.Connection));
			object arg0 = ToLua.ToVarObject(L, 2);
			obj.Write(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BeginWrite(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Aio.Connection obj = (Aio.Connection)ToLua.CheckObject(L, 1, typeof(Aio.Connection));
			obj.BeginWrite();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

